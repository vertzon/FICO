//
// Blaze Advisor Server Deployment.
// Created by the Blaze Advisor Generate Deployment Wizard
//
// Advisor Server Deployment.
// Generated by the Advisor Quick Deployer
//

// This material is the confidential, unpublished property of 
// Fair Isaac Corporation. Receipt or possession of this material does not 
// convey rights to divulge, reproduce, use, or allow others to use it 
// without the specific written authorization of Fair Isaac Corporation and 
// use must conform strictly to the license agreement.
//
// Copyright (c) 2013-2018 Fair Isaac Corporation. All Rights Reserved.
// 
//

package qdblazegenerics;

import javax.jws.WebMethod;
import javax.jws.WebService;
import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

import com.blazesoft.server.base.NdServerException;
import com.blazesoft.server.base.NdServerRuntimeException;
import com.blazesoft.server.deploy.webservice.NdWebServiceDeploymentBase;
//==> Import Application specific code here
@WebService(
		portName = "BlazeGenericsPort",
		serviceName = "BlazeGenericsService", 
		targetNamespace = "http://package.name.in.reverse.order")
public class blazeGenerics extends NdWebServiceDeploymentBase
{
	
	public blazeGenerics()
	{
		super();
	}
	
	/**
	 *	invokes a server process based on the entry point "processWithDecisionFlow"
	 *	in the service "defaultRuleServiceEJB" configured in the Quick Deployer.
	 *
	 *	@param	arg0		==>Enter a description here
	 *	@return	com.fico.ps.lac.blaze.generic.bom.input.DecisionInput	==>Enter a description of the return value
	 */
	@WebMethod
	public com.fico.ps.lac.blaze.generic.bom.input.DecisionInput processWithDecisionFlow(com.fico.ps.lac.blaze.generic.bom.input.DecisionInput arg0) throws Exception
	{
		// Convert the business method arguments to rules processing arguments.
		Object[] applicationArgs = new Object[1];
		applicationArgs[0] = arg0;
			

		// Invoke the entry point
		com.fico.ps.lac.blaze.generic.bom.input.DecisionInput retVal = (com.fico.ps.lac.blaze.generic.bom.input.DecisionInput)getDelegateServer().invokeService("defaultRuleServiceEJB", "processWithDecisionFlow", null, applicationArgs);

		return retVal;
	}
	/**
	 *	invokes a server process based on the entry point "processBatchWithDecisionFlow"
	 *	in the service "defaultRuleServiceEJB" configured in the Quick Deployer.
	 *
	 *	@param	arg0		==>Enter a description here
	 *	@return	com.fico.ps.lac.blaze.generic.bom.input.DecisionInput[]	==>Enter a description of the return value
	 */
	@WebMethod
	public com.fico.ps.lac.blaze.generic.bom.input.DecisionInput[] processBatchWithDecisionFlow(com.fico.ps.lac.blaze.generic.bom.input.DecisionInput[] arg0) throws Exception
	{
		// Convert the business method arguments to rules processing arguments.
		Object[] applicationArgs = new Object[1];
		applicationArgs[0] = arg0;
			

		// Invoke the entry point
		com.fico.ps.lac.blaze.generic.bom.input.DecisionInput[] retVal = (com.fico.ps.lac.blaze.generic.bom.input.DecisionInput[])getDelegateServer().invokeService("defaultRuleServiceEJB", "processBatchWithDecisionFlow", null, applicationArgs);

		return retVal;
	}
	@PostConstruct
	public void init()
	{
		try {
			super.initialize();
		}
		catch (NdServerException e) {
			throw new NdServerRuntimeException(e);
		}
	}
	
	@PreDestroy
	public void destroy()
	{
		try {
			super.shutdown();
		}
		catch (NdServerException e) {
			throw new NdServerRuntimeException(e);
		}
	}

}
